<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25" zv="Cache for Windows (x86-64) 2014.2 (Build 253U)" ts="2014-07-30 12:31:49">
<Class name="FAQ.UnitTests">
<Super>%UnitTest.TestCase</Super>
<TimeChanged>63398,45096.126283</TimeChanged>
<TimeCreated>63393,60278.340983</TimeCreated>

<Method name="TestExceptionError">
<Implementation><![CDATA[
 set tCurErrId = $get(^FAQ.ErrorD)	
 do $$$AssertStatusOK(##class(FAQ.Test).ExceptionError(), "Genarating Exception error")
 do $$$AssertEquals($get(^FAQ.ErrorD),tCurErrId+1, "Comfirming a FAQ.Error object has been produced")
]]></Implementation>
</Method>

<Method name="TestCurrentTopicSubId">
<Implementation><![CDATA[
 set tTopicSubId = $Get(^TopicSubID) + 1	
 do $$$AssertEquals(##class(FAQ.Test).CurrentTopicSubId(),tTopicSubId, "Getting ^TopicSubID + 1")
]]></Implementation>
</Method>

<Method name="TestTopicId">
<Implementation><![CDATA[
 set tTopicId = "G-003"	
 do $$$AssertEquals(##class(FAQ.Test).TopicId(1),tTopicId, "Getting a Topicid in G- format")
 set tTopicId = "00100"	
 do $$$AssertEquals(##class(FAQ.Test).TopicId(100),tTopicId, "Getting a TopicId in as is format")
]]></Implementation>
</Method>

<Method name="TestReflink">
<Implementation><![CDATA[
 set tResult = "2;1"	
 do $$$AssertEquals(##class(FAQ.Test).Reflink2(1,2),tResult, "Linking RefTopic 1 & 2")
 do $$$AssertEquals(##class(FAQ.Test).Reflink2(1,2),tResult, "Linking RefTopic 1 & 2 (already linked)")
 set tTopic1 = ##class(KB.Topic).%OpenId(1)
 set tTopic2 = ##class(KB.Topic).%OpenId(2)
 set tTopic1.RefTopic = ""
 set tTopic2.RefTopic = ""
 set tSC = tTopic1.%Save()
 set tSC = tTopic2.%Save()
 set tResult = "2,3;1;1"	
 do $$$AssertEquals(##class(FAQ.Test).Reflink3(1,2,3),tResult, "Linking RefTopic 1 & 2 & 3")
 do $$$AssertEquals(##class(FAQ.Test).Reflink3(1,2,3),tResult, "Linking RefTopic 1 & 2 & 3 (aleady linked")
 set tTopic1 = ##class(KB.Topic).%OpenId(1)
 set tTopic2 = ##class(KB.Topic).%OpenId(2)
 set tTopic3 = ##class(KB.Topic).%OpenId(3)
 set tTopic1.RefTopic = ""
 set tTopic2.RefTopic = ""
 set tTopic3.RefTopic = ""
 set tSC = tTopic1.%Save()
 set tSC = tTopic2.%Save()
 set tSC = tTopic3.%Save()
 set tResult1 = "3;2"
 set tResult2 = "2;3,1"
 do $$$AssertEquals(##class(FAQ.Test).Reflink2(2,3),tResult1, "Linking RefTopic 2 & 3")
 do $$$AssertEquals(##class(FAQ.Test).Reflink2(1,2),tResult2, "Linking RefTopic 1 & 2 2 has already a link")
 do $$$AssertEquals(##class(FAQ.Test).Reflink2(1,2),tResult2, "Linking RefTopic 1 & 2 2 has already a link aleady linked")
 set tTopic1 = ##class(KB.Topic).%OpenId(1)
 set tTopic2 = ##class(KB.Topic).%OpenId(2)
 set tTopic3 = ##class(KB.Topic).%OpenId(3)
 set tTopic1.RefTopic = ""
 set tTopic2.RefTopic = ""
 set tTopic3.RefTopic = ""
 set tSC = tTopic1.%Save()
 set tSC = tTopic2.%Save()
 set tSC = tTopic3.%Save()
]]></Implementation>
</Method>
</Class>
</Export>
