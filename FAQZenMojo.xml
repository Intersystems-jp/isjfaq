<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25" zv="Cache for Windows (x86-64) 2015.2.2 (Build 805U)" ts="2016-03-02 11:52:50">
<Class name="FAQ.FAQTopicQuery">
<Description>
Created using the page template: Default</Description>
<Super>%ZEN.Mojo.basePage</Super>
<TimeChanged>63588,68939.794133</TimeChanged>
<TimeCreated>63048,58484.834602</TimeCreated>

<Parameter name="ALLOWMOBILE">
<Default>1</Default>
</Parameter>

<Parameter name="APPLICATION">
<Description>
Class name of application this page belongs to.</Description>
<Default>ZMdemo.LoadAndStore.Application</Default>
</Parameter>

<Parameter name="PAGENAME">
<Description>
Displayed name of this page.</Description>
<Default>HomePage</Default>
</Parameter>

<Parameter name="DOMAIN">
<Description>
Domain used for localization.</Description>
<Default>Zen Mojo FAQ</Default>
</Parameter>

<Parameter name="PROVIDERLIST">
<Description>
List of JSON providers created for this page.
Used by contentProvider.</Description>
<Default>data,layout</Default>
</Parameter>

<Parameter name="TEMPLATECLASS">
<Description>
Starting template class for this page
Used by contentProvider.
This is overriden by application settings, of provided.</Description>
<Default>FAQ.FAQTopicQueryTemplate</Default>
</Parameter>

<Parameter name="CSSINCLUDES">
<Description>
Comma-separated list of additional CSS3 include files for the page.
If this is defined *and* this page is using CSS3, then the CSSINCLUDES parameter is ignored.
If this is not defined *and* this page is using CSS3, then the CSSINCLUDES parameter is used.</Description>
<Type>STRING</Type>
<Default>jquery.mobile-1.3.2.min.css</Default>
</Parameter>

<Parameter name="JSINCLUDES">
<Description>
Comma-separated list of additional JS include files for the page.</Description>
<Type>STRING</Type>
<Default>jquery-1.10.2.min.js,jquery.mobile-1.3.2.min.js</Default>
</Parameter>

<XData name="Style">
<Description>
This Style block contains page-specific CSS style definitions.</Description>
<Data><![CDATA[
<style type="text/css">
	.ui-listview-filter {
		margin: 0px;
	}
	pre {
		font-size: 100%;
	}
    div.divcommand
    {
      width:90%;
      overflow-x:auto;
      margin:10px 0px;
      background-color:#E0FFFF;
    }
	
</style>
]]></Data>
</XData>

<XData name="pageContents">
<Description>
This XML block defines the contents of this pane.</Description>
<XMLNamespace>http://www.intersystems.com/zen</XMLNamespace>
<Data><![CDATA[
<pane xmlns="http://www.intersystems.com/zen"
xmlns:mojo="http://www.intersystems.com/zen/mojo"
layout="none">

<mojo:documentView id="mainView" enclosingStyle=""
developerMode="false" 
onload="zenPage._latestjQMVersion = 'jQM-1.3.2-Helper';"
initialDocumentKey="query-entry"
initialLayoutKey="query-entry"
ongetlayout = "return zenPage.getContent('layout',key,criteria);"
ongetdata = "return zenPage.getContent('data',key,criteria);"
>
<mojo:jQM-1.3.2-PageManager jQueryAnimation="slide" onPageShow="zenPage.onPageShow(layoutkey,documentkey);">
<mojo:jQM-1.3.2-Helper/>
<mojo:HTML5Helper/>
<mojo:mojoDefaultHelper/>
</mojo:jQM-1.3.2-PageManager>
</mojo:documentView>

</pane>
]]></Data>
</XData>

<Method name="onPageShow">
<FormalSpec>layoutkey,documentkey</FormalSpec>
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[
	// dispatch to template object
	var template = this.getTemplate();
	return (template&&template.pageShow) ? template.pageShow(layoutkey, documentkey) : null;
]]></Implementation>
</Method>

<Method name="adjustContentSize">
<Description>
Implementation for this page. This method adjusts the size of components 
within the content area based on the current width and height of the screen. 
In this case there is only one component.</Description>
<FormalSpec>load,width,height</FormalSpec>
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[
	
	var mainView = zen('mainView');
	if (mainView) {
		var mainDiv = mainView.getEnclosingDiv();
		mainDiv.style.top =  '0px';
		mainDiv.style.left = '0px';
	}
]]></Implementation>
</Method>

<Method name="%OnDrawHTMLMeta">
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	 Write "<meta name=""viewport"" content=""width=device-width,initial-scale=1.0""/>"
	 Quit $$$OK
]]></Implementation>
</Method>
</Class>


<Class name="FAQ.FAQTopicQueryTemplate">
<Super>%ZEN.Mojo.Component.contentTemplate</Super>
<TimeChanged>63538,42795.128729</TimeChanged>
<TimeCreated>63048,58554.738224</TimeCreated>

<Parameter name="NAMESPACE">
<Default>http://www.intersystems.com/zen/mojo/faq</Default>
</Parameter>

<Parameter name="DOMAIN">
<Description>
Domain used for localization.</Description>
<Default>Zen Mojo FAQ</Default>
</Parameter>

<Method name="%OnGetJSONContent">
<Description><![CDATA[
Server-side method to provide content to JSON providers.<br/>
<var>pWhich</var> is the name of the provider.<br/>
<var>pKey</var> is an app-defined key that is used to indicate which content is to be served.<br/>
<var>pCriteria</var>is an object containing search criteria. This is used for searching.<br/>
<var>pParms</var> is an array of additional parameters from the JSON provider. (not current used).<br/>
<var>pObject</var> is the object that will be served to the client in JSON format.<br/>
<var>pLoad</var> is true is this is called when the page is first being served. In this case, this method will be 
called even though there may a client-side method used to load the content.<br/>]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[pWhich:%String,pKey:%String,&pParms,*pObject:%RegisteredObject,pCriteria:%RegisteredObject,pLoad:%Boolean=0]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#dim sql As %String = ""
	#dim tsc As %Status = $$$OK
	#dim result As %SQL.StatementResult
		
	set pObject = ##class(%ZEN.proxyObject).%New()
	
	if (pKey = "query-entry") {
		set pObject.sectionHeader = "InterSystems製品FAQ"
		set pObject.inputPrompt = "検索キーワードを入力して下さい: "
		set pObject.buttonLabel = "検索 "
		
	} elseif (pKey = "list-topics") {
		
		set pObject.topicList = ##class(%ListOfObjects).%New()
		
		set pObject.sectionHeader = "検索結果リスト"

		set statement = ##class(%SQL.Statement).%New()
		set sql = "select ID,Title,Description from KB.Topic where Description %containsterm(?) OR Title %containsterm(?)"
		set tsc = statement.%Prepare(sql)
		if ($$$ISERR(tsc)) {
			quit $$$OK
		}
		
		set result = statement.%Execute(pCriteria.queryText,pCriteria.queryText)
		
		while result.%Next() {
			set topic = ##class(%ZEN.proxyObject).%New()
			set topic.id = result.%Get("ID")
			set topic.title = result.%Get("Title")
			set topic.sdesc = $extract(result.%Get("Description"),1,40)
			do pObject.topicList.Insert(topic)
		}
	} elseif (pKey = "show-topic") {
		
		set pObject.topicList = ##class(%ListOfObjects).%New()

		set pObject.sectionHeader = "トピック詳細"
		
		set statement = ##class(%SQL.Statement).%New()
		// Get any additional details now
		set sql = "select ID,Title,Description from KB.Topic where id = ?"
		set tsc  = statement.%Prepare(sql)
		if ($$$ISERR(tsc)) {
			quit $$$OK
		}
		set result = statement.%Execute(pCriteria.id)
		
		while result.%Next() {
			set pObject.id = result.%Get("id")
			set pObject.title = result.%Get("Title")
			set crlf = $Char(13,10)
			set tDescription = $Replace(result.%Get("Description"),crlf,"<br>")
			
			set sc = ##class(KB.Utility).PickupTags(tDescription,"URL",.url)
			
			for i = 1:1:url {
				set current = "<URL>"_url(i)_"</URL>"
				set new = "<A href="""_url(i)_""" target=""_blank"">"_url(i)_"</A>"
				set tDescription = $Replace(tDescription,current,new)
				set current = "<Url>"_url(i)_"</Url>"
				set tDescription = $Replace(tDescription,current,new)
				set current = "<url>"_url(i)_"</Url>"
				set tDescription = $Replace(tDescription,current,new)
			}

			set sc = ##class(KB.Utility).PickupTags(tDescription,"COMMAND",.command)
			
			for i = 1:1:command {
				set current = "<COMMAND>"_command(i)_"</COMMAND>"
				set new = "<DIV class=divcommand><PRE><CODE>"_command(i)_"</CODE></PRE></DIV>"
				set tDescription = $Replace(tDescription,current,new)
				set current = "<Command>"_command(i)_"</Command>"
				set tDescription = $Replace(tDescription,current,new)
				set current = "<command>"_command(i)_"</command>"
				set tDescription = $Replace(tDescription,current,new)
			}
			
			set pObject.description = tDescription

		}
	}
	
	quit $$$OK
]]></Implementation>
</Method>

<Method name="onGetContent">
<Description><![CDATA[
Client-side content provider method.
<var>which</var> is the name of the content to return.
<var>key</var> is the key value associated with the request.
<var>criteria</var> is the search criteria associated with the request.]]></Description>
<FormalSpec>which,key,criteria</FormalSpec>
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[
	//console.log(which + ' - ' + key + ' - ' + criteria);
	switch (which)
	{
		case 'layout':
			return this.getLayout(key,criteria);
		case 'data':
			// always fetch data from server for this sample
	}
	
	// returning null -> fetch data from server
	return null;
]]></Implementation>
</Method>

<Method name="getLayout">
<Description>
Creates the layout object for the page</Description>
<FormalSpec>key,criteria</FormalSpec>
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[
	var content = null;
	
    
    switch(key) {
	    case 'query-entry' :
	     	content = {
		     	children:[
		     		{type:'$header',caption:'=[sectionHeader]'},
				    { type: '$div', style: 'text-align: center;', children: [
				      { type: '$grid', showBox: false, children: [
				        { 
					      type: '$text', placeHolder: '=[inputPrompt]', fieldcontain: false,
					      key: 'query-text', label: '=[inputPrompt]', apply: true
				        },
				      ]},
				      { type: '$grid', showBox: false, children: [
					    { type: '$button', caption: '=[buttonLabel]', key: 'query-button' }
				      ]},
				    ]}
		     	]
		     };
	     	break;
	    case 'list-topics' :
	     	content = {
		     	children:[
		     		{type:'$header',caption:'=[sectionHeader]'},
		     		{type:'$listview',value:'=[topicList]',filter:true,children:[
		     			{type:'$listviewitem',key:'drill-topic',value:'=[id]',label:'=[title]',content:'=[sdesc]',clickable:true,labelNoWrapper:true }
		     		]}
		     	]
		     };
	     	break;
	     case 'show-topic' :
	     	content = {
		     	children:[
		     		{type:'$header',caption:'=[sectionHeader]'},
		     		{type:'$h1',$content:'=[title]'},
		     		{type:'$content',content:'=[description]',style: 'word-wrap: break-word;'},
	     		]
		     };
	     	break;
    } 
           				
    return content;
]]></Implementation>
</Method>

<Method name="onselect">
<FormalSpec>key,value,docViewId</FormalSpec>
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[
	console.log('select '+key);
	var mainView = zen(docViewId);
	var realKey = key.split(':')[0];
	switch(realKey) {
		case 'query-button':
       	    var qt=zen('mainView').getItemByKey('query-text');
			mainView.pushDocument('list-topics',{queryText:qt.value},'list-topics',{queryText:qt.value});
			break;
		case 'drill-topic':
			mainView.pushDocument('show-topic',{id:value},'show-topic',{id:value});
			break;
	}
]]></Implementation>
</Method>

<Method name="onchange">
<FormalSpec>key,value,final,docViewId</FormalSpec>
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[
	console.log('change ' + key + ' to ' + value);
	var view = zen(docViewId);
	switch(key) {
	}
]]></Implementation>
</Method>

<Method name="%OnSubmitData">
<Description><![CDATA[
Submit data handler for content provider.<br/>
Overridden by subclasses.]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[pKey:%String,pID:%String,pSubmitObject:%RegisteredObject,&pResponseObject:%RegisteredObject]]></FormalSpec>
<ReturnType>%Status</ReturnType>
</Method>
</Class>


<Project name="FAQZenMojo" LastModified="2016-03-02 11:48:21.248243">
  <Items>
    <ProjectItem name="FAQ.FAQTopicQuery" type="CLS"></ProjectItem>
    <ProjectItem name="FAQ.FAQTopicQueryTemplate" type="CLS"></ProjectItem>
  </Items>
</Project>
</Export>
